// schema.prisma

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// Enum definitions
enum ROLE_ENUM {
  DEFAULT_USER
  SUPER_ADMIN
}

enum SOCIAL_ACCOUNT_ENUM {
  FACEBOOK
  GOOGLE
  TWITTER
}

// User Management
model User {
  createdAt         DateTime         @default(now())
  updatedAt         DateTime         @updatedAt

  id                Int              @id @default(autoincrement())
  email             String           @unique
  name              String
  username          String           @unique
  password          String
  role              ROLE_ENUM        @default(DEFAULT_USER)
  passwordResetCode String?

  free_messages     Int?             @default(10)
  is_premium        Boolean          @default(false)
  klaviyo_id        String?          @unique

  socialAccounts    SocialAccount[]
  conversations     Conversation[]

  @@index([id])
}

// Social Account Management
model SocialAccount {
  createdAt         DateTime         @default(now())
  updatedAt         DateTime         @updatedAt

  id           Int                @id @default(autoincrement())
  accountType  SOCIAL_ACCOUNT_ENUM
  accessToken  String
  tokenExpiry  DateTime?
  refreshToken String?
  accountID    String
  userId       Int
  user         User               @relation(fields: [userId], references: [id])
}

model Conversation {
  createdAt         DateTime         @default(now())
  updatedAt         DateTime         @updatedAt

  id              String     @id @default(uuid())
  character_id    String
  last_message_id String?
  last_updated    DateTime   @updatedAt
  messages        Message[]
  user            User       @relation(fields: [userId], references: [id])
  userId          Int        // Change to Int to match User model
}

model Message {
  createdAt         DateTime         @default(now())
  updatedAt         DateTime         @updatedAt

  id              String       @id @default(uuid())
  conversation_id String
  message         String
  character_id    String
  created_at      DateTime     @default(now())
  conversation    Conversation @relation(fields: [conversation_id], references: [id])
}
